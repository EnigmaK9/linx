# -*- coding: utf-8 -*-
"""modulo_13_04_24.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vEUJKH5tvWHvs3tnT40sY7kPvlzOYjji

Importamos las funciones
"""

import numpy as np
import random

"""primera funciòn"""

# Módulo 1: Ajuste de Prioridades
def ajustar_prioridades(tareas):
    # Asegurar que los extremos no cambien
    tareas_ajustadas = [0, *sorted(tareas[1:-1]), 1]
    tarea1 = peso1(random.uniform(0,1)) 
    tarea2 = peso2(random.uniform(0,1)) 
    tarea3 = peso3(random.uniform(0,1)) 
    tarea4 = peso4(random.uniform(0,1)) 
    tarea5 = peso5(random.uniform(0,1)) 
     # Aplicar un ajuste simple: promedio entre el valor actual y el anterior ajustado
    for i in range(2, len(tareas_ajustadas) - 1):
        tareas_ajustadas[i] = (tareas_ajustadas[i] + tareas_ajustadas[i - 1]) / 2

    return tareas_ajustadas

# Módulo 2: Función de Consumo
def funcion_consumo(tareas_ajustadas):
    # Supongamos que el consumo es proporcional al cuadrado de la prioridad
    consumo = [t ** 2 for t in tareas_ajustadas]
    return consumo

# Lista de ejemplo de tareas con prioridades aleatorias
tareas = np.random.rand(5)
tareas[0] = 0  # Asegurar el valor mínimo
tareas[-1] = 1  # Asegurar el valor máximo

# Ajustar las prioridades
tareas_ajustadas = ajustar_prioridades(tareas)

# Calcular el consumo
consumo = funcion_consumo(tareas_ajustadas)

tareas, tareas_ajustadas, consumo